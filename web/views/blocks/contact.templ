package blocks

import (
	"github.com/ainsleydev/sclark.uk/views/components"
	"github.com/ainsleydev/webkit/pkg/adapters/payload"
	"github.com/ainsleydev/sclark.uk/types"
)

templ Contact(props types.BlockContact) {
	{{ settings := payload.MustGetSettings(ctx) }}
	<section class="section section-fade-blue">
		<div class="container">
			<div class="row justify-content-tab-center justify-content-desk-between">
				<!-- Content -->
				<div class="col-12 col-tab-10 col-desk-6 col-desk-large-5">
					@components.Group("mb-m mb-desk-l") {
						<!-- Title -->
						if props.Title != "" {
							<h2>{ props.Title } </h2>
						}
						<!-- Content -->
						if props.Content != nil {
							<p class="mb-0">{ *props.Content }</p>
						}
					}
					if settings != nil && settings.Contact != nil {
						<div class="contact-social mb-m mb-desk-0">
						 	<!-- Telephone -->
							@components.Group() {
								if settings.Contact.Telephone != nil {
									<div class="contact-item">
										<h6>Email</h6>
										<a href={ templ.SafeURL("mailto:" + *settings.Contact.Email) }>
											{ *settings.Contact.Email }
										</a>
									</div>
								}
							}
							<!-- Email -->
							@components.Group() {
								if settings.Contact.Email != nil {
									<div class="contact-item">
										<h6>Telephone</h6>
										<a href={ templ.SafeURL("tel:" + *settings.Contact.Telephone) }>
											{ *settings.Contact.Telephone }
										</a>
									</div>
								}
							}
							<!-- Social -->
							if props.IncludeSocial != nil && *props.IncludeSocial == true {
								@components.Group("mb-0") {
									<div class="contact-item">
										<h6>Connect</h6>
										@components.Social(components.SocialProps{})
									</div>
								}
							}
						</div>
					}
				</div><!-- /Col -->
				<!-- Form -->
				<div class="col-12 col-tab-10 col-desk-6 col-desk-large-5">
					<form class="form" hx-post="/contact" hx-swap="outerHTML">
						@components.Group() {
							<h4>Get in touch</h4>
							<p>Fill out the quick form below and we will get back in touch.</p>
						}
						for _, field := range props.Form.Fields {
							<div class="form-group">
								<label class="form-label" for={ field.ID }>{ field.Label }</label>
								@field
							</div>
						}
						@components.Button(components.ButtonProps{
							Text: props.Form.ButtonLabel("Get In Touch"),
							Filled: true,
							Block: true,
						})
					</form>
				</div>
			</div><!-- /Row -->
		</div><!-- /Container -->
	</section>
}
