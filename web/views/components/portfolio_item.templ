package components

import (
	"strconv"
	"time"
	"log/slog"
	"github.com/ainsleydev/sclark.uk/types"
	"github.com/ainsleydev/webkit/pkg/markup"
)

func parseDate(in string) string {
	layout := "2006-01-02T15:04:05.000Z"
	t, err := time.Parse(layout, in)
	if err != nil {
		slog.Error("Error parsing time:", err)
		return ""
	}
	return t.Format("02/01/2006")
}

templ PortfolioItem(idx int, props types.Portfolio) {
	<a href={ templ.SafeURL(props.Url) } class="portfolio-item" target="_blank"
		data-aos="fade"
		data-aos-delay={ strconv.Itoa(idx * 100) }
	>
		<!-- Image -->
		if props.Image.URL != "" {
			@markup.Picture(&props.Image,
				markup.PictureWithClasses("portfolio-item-image"),
				markup.PictureWithLazyLoading(),
			)
		}
		<!-- Content -->
		<div class="portfolio-item-content">
			<div>
				<!-- Category & Date -->
				<div class="portfolio-item-meta">
					if props.Category.Title != "" {
						<small>
							{ props.Category.Title }
						</small>
					}
					if props.Date != "" {
						<small>
							{ parseDate(props.Date) }
						</small>
					}
				</div>
				<!-- Title -->
				<h5 class="portfolio-item-title">
					{ props.Title }
				</h5>
			</div>
			<!-- Logo -->
			if props.Company.Logo.URL != "" {
				<picture class="portfolio-item-logo">
					<img loading="lazy" src={ props.Company.Logo.URL } alt={ props.Company.Logo.Alt() } >
				</picture>
			}
		</div>
	</a>
}
