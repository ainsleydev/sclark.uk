package components

import (
	"context"
	"github.com/ainsleydev/webkit/pkg/adapters/payload"
	"github.com/ainsleydev/webkit/pkg/adapters/static"
	"github.com/ainsleydev/webkit/pkg/markup"
)

type socialLink struct {
	Name string
	Icon string
	URL  *string
}

func getSocialLinks(ctx context.Context) []socialLink {
	settings := payload.MustGetSettings(ctx)
	if settings == nil || settings.Social == nil {
		return nil
	}
	return []socialLink{
		{Name: "LinkedIn", Icon: "/assets/images/social/linkedin.png", URL: settings.Social.LinkedIn},
		{Name: "Youtube", Icon: "/assets/images/social/youtube.png", URL: settings.Social.Youtube},
		{Name: "Instagram", Icon: "/assets/images/social/instagram.png", URL: settings.Social.Instagram},
		{Name: "Facebook", Icon: "/assets/images/social/facebook.png", URL: settings.Social.Facebook},
		{Name: "TikTok", Icon: "/assets/images/social/tiktok.png", URL: settings.Social.Tiktok},
	}
}

templ Social() {
	<div class="social">
		for _, link := range getSocialLinks(ctx) {
			if link.URL != nil {
				<a class="social-link" href={ templ.SafeURL(*link.URL) } target="_blank">
					@markup.Picture(static.Image(link.Icon),
						markup.PictureWithAlt(link.Name+" Icon"),
						markup.PictureWithClasses("social-picture"),
						markup.PictureWithHiddenMediaSources(),
						markup.PictureWithLazyLoading(),
					)
				</a>
			}
		}
	</div>
}
