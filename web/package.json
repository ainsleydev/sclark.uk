{
	"name": "web",
	"version": "1.0.0",
	"license": "BSD-3-Clause",
	"scripts": {
		"dev": "pnpm run watch:go & pnpm run watch:assets",
		"watch:go": "pnpm run kill && TEMPL_EXPERIMENT=rawgo air -c .air.toml",
		"watch:assets": "node esbuild.mjs --watch",
		"build": "pnpm run build:go && pnpm run build:assets",
		"build:go": "go build main.go",
		"build:assets": "node esbuild.mjs",
		"check": "pnpm run format && pnpm run lint && pnpm run test",
		"format": "pnpm run format:go && pnpm run format:assets",
		"format:assets": "biome format --write .",
		"format:go": "go fmt ./... && templ fmt .",
		"lint": "pnpm run lint:go && pnpm run lint:assets",
		"lint:go": "golangci-lint run --fix ./...",
		"lint:assets": "biome lint --write .",
		"docker:build": "docker build -t web .",
		"docker:run": "docker run -it --init --env-file .env -p 3000:3000 --rm -ti ainsley.dev/web",
		"generate:templ": "TEMPL_EXPERIMENT=rawgo go generate ./...",
		"generate:types": "go-jsonschema -p types --struct-name-from-title ../cms/src/types/payload.json > ./types/cms.go",
		"test": "go test ./... -race $$(go list ./... | temp) -coverprofile=../../coverage.out -covermode=atomic",
		"cover": "go tool cover -html=coverage.out",
		"kill": "lsof -t -i tcp:3000 | xargs kill"
	},
	"devDependencies": {
		"@biomejs/biome": "1.8.3",
		"@eslint/js": "^9.6.0",
		"@types/browser-sync": "^2.29.0",
		"browser-sync": "^3.0.2",
		"esbuild": "^0.21.3",
		"esbuild-plugin-copy": "^2.1.1",
		"esbuild-sass-plugin": "^3.2.0",
		"fs-extra": "^11.2.0",
		"sharp": "^0.33.4"
	},
	"dependencies": {
		"normalize.css": "^8.0.1"
	}
}
