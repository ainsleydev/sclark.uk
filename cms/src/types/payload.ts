/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export type NavigationHeaderLinks =
	| {
			title: string;
			url: string;
			id?: string | null;
	  }[]
	| null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NavigationHeaderLinks".
 */
export type NavigationHeaderLinks1 =
	| {
			title: string;
			url: string;
			id?: string | null;
	  }[]
	| null;

export interface Config {
	collections: {
		posts: Post;
		pages: Page;
		clients: Client;
		reviews: Review;
		portfolio: Portfolio;
		"portfolio-categories": PortfolioCategory1;
		users: User;
		forms: Forms;
		"form-submissions": FormSubmissions;
		"payload-preferences": PayloadPreference;
		"payload-migrations": PayloadMigration;
	};
	globals: {
		settings: Settings;
		navigation: Navigation;
	};
	locale: null;
	user: User & {
		collection: "users";
	};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
	id: number;
	title: string;
	excerpt?: string | null;
	content?: string;
	thumbnail?: {
		[k: string]: unknown;
	};
	meta?: {
		[k: string]: unknown;
	};
	publishedAt?: string | null;
	relatedPosts?: Post[];
	tags?:
		| {
				tag?: string | null;
				id?: string | null;
		  }[]
		| null;
	updatedAt: string;
	createdAt: string;
	_status?: ("draft" | "published") | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
	id: number;
	layout: {
		[k: string]: unknown;
	};
	isHome?: boolean | null;
	updatedAt: string;
	createdAt: string;
	_status?: ("draft" | "published") | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clients".
 */
export interface Client {
	id: number;
	name: string;
	url: string;
	logo: {
		[k: string]: unknown;
	};
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
	id: number;
	content: string;
	author: {
		firstName: string;
		lastName: string;
		description: string;
	};
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio".
 */
export interface Portfolio {
	id: number;
	title: string;
	url: string;
	date: string;
	company: Client1;
	category: PortfolioCategory;
	image: {
		[k: string]: unknown;
	};
	updatedAt: string;
	createdAt: string;
}
export interface Client1 {
	id: number;
	name: string;
	url: string;
	logo: {
		[k: string]: unknown;
	};
	updatedAt: string;
	createdAt: string;
}
export interface PortfolioCategory {
	id: number;
	title: string;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio-categories".
 */
export interface PortfolioCategory1 {
	id: number;
	title: string;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
	id: number;
	name: string;
	updatedAt: string;
	createdAt: string;
	enableAPIKey?: boolean | null;
	apiKey?: string | null;
	apiKeyIndex?: string | null;
	email: string;
	resetPasswordToken?: string | null;
	resetPasswordExpiration?: string | null;
	salt?: string | null;
	hash?: string | null;
	loginAttempts?: number | null;
	lockUntil?: string | null;
	password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Forms {
	[k: string]: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmissions {
	[k: string]: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
	id: number;
	user: {
		relationTo: "users";
		value: number | User;
	};
	key?: string | null;
	value?:
		| {
				[k: string]: unknown;
		  }
		| unknown[]
		| string
		| number
		| boolean
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
	id: number;
	name?: string | null;
	batch?: number | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Settings {
	[k: string]: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
	id: number;
	header?: NavigationHeaderLinks;
	updatedAt?: string | null;
	createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockContentDefault".
 */
export interface BlockContentDefault {
	style: "centered" | "spread";
	centreAlign?: boolean | null;
	content: string;
	contentHtml?: string | null;
	id?: string | null;
	blockName?: string | null;
	blockType: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockContent".
 */
export interface BlockContent {
	content: string;
	contentHtml?: string | null;
	id?: string | null;
	blockName?: string | null;
	blockType: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockFAQs".
 */
export interface BlockFAQs {
	faqs?:
		| {
				question: string;
				answer: string;
				id?: string | null;
		  }[]
		| null;
	id?: string | null;
	blockName?: string | null;
	blockType: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockContentWithImage".
 */
export interface BlockContentWithImage {
	textLayout: {
		[k: string]: unknown;
	};
	imagePosition: string;
	sticky?: boolean | null;
	image: {
		[k: string]: unknown;
	};
	id?: string | null;
	blockName?: string | null;
	blockType: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockLogs".
 */
export interface BlockLogs {
	title: string;
	greyscale?: boolean | null;
	logos?:
		| {
				logo: {
					[k: string]: unknown;
				};
				id?: string | null;
		  }[]
		| null;
	id?: string | null;
	blockName?: string | null;
	blockType: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockReviews".
 */
export interface BlockReviews {
	title: string;
	content?: string | null;
	items?: Review[];
	id?: string | null;
	blockName?: string | null;
	blockType: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockPortfolio".
 */
export interface BlockPortfolio {
	title: string;
	content?: string | null;
	items?: Portfolio[];
	id?: string | null;
	blockName?: string | null;
	blockType: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockContact".
 */
export interface BlockContact {
	title: string;
	content?: string | null;
	includeSocial?: boolean | null;
	form?: {
		[k: string]: unknown;
	};
	id?: string | null;
	blockName?: string | null;
	blockType: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
	[k: string]: unknown;
}

declare module "payload" {
	export interface GeneratedTypes extends Config {}
}
